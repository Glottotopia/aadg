function addfield(id,field,value){
    var callbacks = { 
	success : function (o) {
	    var msg;  
	    try {
		r = YAHOO.lang.JSON.parse(o.responseText);
		msg = r.msg
		status = r.status
	    }
	    catch (x) {
		alert("JSON Parse failed!");
		return;
	    }  
	    cid = "callbackmsg"+id 
	    if (status == 'success'){
		tagcontainer = document.getElementById('tagcontainer'+id)
		div = document.createElement('div');
		div.setAttribute('class','tag');
		fieldspan = document.createElement('span');
		fieldspan.setAttribute('class','field');
		fieldspan.appendChild(document.createTextNode(field));
		valuespan = document.createElement('span');
		valuespan.setAttribute('class','value');
		valuespan.setAttribute('id',id+field+value)
		valuespan.appendChild(document.createTextNode(value));
		closerspan = document.createElement('span');
		a = document.createElement('a');
		a.appendChild(document.createTextNode("â¨‚"))
		a.setAttribute('href','#');
		clickstring = "deletefield('"+id+"','"+field+"','"+value+"');" 
		a.setAttribute('onClick',clickstring);
		closerspan.appendChild(a);
		valuespan.appendChild(closerspan);
		div.appendChild(fieldspan);
		div.appendChild(valuespan);
		tagcontainer.appendChild(div)
	    }
	    if (status == 'failure'){
		document.getElementById(cid).innerHTML = msg
		document.getElementById(cid).setAttribute("class",status+ " callbackmsg")
		document.getElementById(cid).setAttribute("style",'')		
	    }
	},
	failure : function(o){
	    alert("connection error")
	}
    };
    // Make the call to the server for JSON data 
    host = "http://88.198.149.2/athagram/mod";  
<<<<<<< .mine
    address = host+'/'+'add'+'/'+id+'/'+field+'/'+value 
=======
    address = host+'/add/'+id+'/'+field+'/'+value 
>>>>>>> .r42
    YAHOO.util.Connect.asyncRequest('GET', address, callbacks);
}
 
function deletefield(id,field,value){
    var callbacks = { 
	success : function (o) {
	    var msg;  
	    try {
		r = YAHOO.lang.JSON.parse(o.responseText);
		msg = r.msg
		status = r.status
	    }
	    catch (x) {
		alert("JSON Parse failed!");
		return;
	    } 
// 		document.getElementById("callbackmsg").appendChild(document.createTextNode(msg)); 
	    cid = "callbackmsg"+id 
	    if (status == 'success'){
		hit = document.getElementById(id+field+value)
		hit.parentNode.removeChild(hit)
	    }
	    if (status == 'failure'){
		document.getElementById(cid).innerHTML = msg
		document.getElementById(cid).setAttribute("class",status+ " callbackmsg")
		document.getElementById(cid).setAttribute("style",'')		
	    } 
	},
	failure : function(o){
	    alert("connection error")
	}
    };
    // Make the call to the server for JSON data 
    host = "http://88.198.149.2/athagram/mod";  
    address = host+'/delete/'+id+'/'+field+'/'+value 
    YAHOO.util.Connect.asyncRequest('GET', address, callbacks);
}

function yuitest(fct,id,field,value){
    var callbacks = { 
	success : function (o) {
	    var msg;  
	    try {
		r = YAHOO.lang.JSON.parse(o.responseText);
		msg = r.msg
		status = r.status
	    }
	    catch (x) {
		alert("JSON Parse failed!");
		return;
	    } 
// 		document.getElementById("callbackmsg").appendChild(document.createTextNode(msg)); 
	    cid = "callbackmsg"+id
// 	    alert(cid)
	    document.getElementById(cid).innerHTML = msg
	    document.getElementById(cid).setAttribute("class",status+ " callbackmsg")
	    document.getElementById(cid).setAttribute("style",'')
	},
	failure : function(o){
	    alert("connection error")
	}
    };
    // Make the call to the server for JSON data 
    host = "http://88.198.149.2/athagram/mod";  
    address = host+'/'+fct+'/'+id+'/'+field+'/'+value 
    YAHOO.util.Connect.asyncRequest('GET', address, callbacks);
}
 
 
 
YUI().use('transition', 'node-event-delegate', 'cssbutton', function(Y) {
Y.delegate('click', function(e) {
    var buttonName = e.currentTarget.get('name'),
	buttonID = e.currentTarget.get('id');
	node = Y.one('#ul'+buttonID);
    if (buttonName === 'show') {
	node.show(true);
    }else if (buttonName == 'hide') {
	node.hide(true);
    }else if (buttonName === 'showform') {
	node = Y.one('#formul'+buttonID);
	node.show(true);
    }else if (buttonName == 'hideform') {
	node = Y.one('#formul'+buttonID);
	node.hide(true);
    }else if (buttonName == 'hideall') {
	uls = document.getElementsByName('facetul') 
	for (i in uls){ 
	    if (uls.hasOwnProperty(i)) { 
		ul = uls[i];
		ulid = ul.id  
		node = Y.one('#'+ulid); 
		node.hide(true);		    
	    }
	}
    }else if (buttonName == 'showall') {
	uls = document.getElementsByName('facetul') 
	for (i in uls){ 
	    if (uls.hasOwnProperty(i)) { 
		ul = uls[i];
		ulid = ul.id  
		node = Y.one('#'+ulid); 
		node.show(true);		    
	    }
	} 
    }else if (buttonName == 'hideallforms') {
	uls = document.getElementsByName('formul') 
	for (i in uls){ 
	    if (uls.hasOwnProperty(i)) { 
		ul = uls[i];
		ulid = ul.id   
		node = Y.one('#'+ulid); 
		node.hide(true);		    
	    }
	}
    }else if (buttonName == 'showallforms') {
	uls = document.getElementsByName('formul') 
	for (i in uls){ 
	    if (uls.hasOwnProperty(i)) { 
		ul = uls[i];
		ulid = ul.id  
		node = Y.one('#'+ulid); 
		node.show(true);		    
	    }
	} 
    }else if (buttonName == 'hideallranges') {
	uls = document.getElementsByName('facetulr') 
	for (i in uls){ 
	    if (uls.hasOwnProperty(i)) { 
		ul = uls[i];
		ulid = ul.id  
		node = Y.one('#'+ulid); 
		node.hide(true);		    
	    }
	}
    }else if (buttonName == 'showallranges') {
	uls = document.getElementsByName('facetulr') 
	for (i in uls){ 
	    if (uls.hasOwnProperty(i)) { 
		ul = uls[i];
		ulid = ul.id  
		node = Y.one('#'+ulid); 
		node.show(true);		    
	    }
	}
    }else if (buttonName == 'hideexex') {
	els = document.getElementsByName('extr')  
	for (i in els){ 
	    if (els.hasOwnProperty(i)) { 
		el = els[i];
		elid = el.id   
		node = Y.one('#'+elid); 
		node.hide(true);		    
	    }
	}
    }else if (buttonName == 'showexex') {
	els = document.getElementsByName('extr')  
	for (i in els){ 
	    if (els.hasOwnProperty(i)) { 
		el = els[i]; 		
		elid = el.id  
		node = Y.one('#'+elid); 
		node.show(true);		    
	    }
	}
    }

}, document, 'button');
});  